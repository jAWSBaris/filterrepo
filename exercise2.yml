#Stack1: Create EC2 Instance and use UserData to Install apache2
#Stack1: Create a file on the Instance with contents from SSM parameter
#Stack1: Export the Instance Id from Stack1
#Stack1: Create an Output with the exact SSH command that user can use to login to the instance
#Stack2: New CloudFormation stack that uses the Export (by importing it)
#Stack2: Create an IAM user with Password set using dynamic references and a policy denying StopInstances API to Imported Instance Id
#Stack2: Create an S3 Bucket if environment is Production (Or) Staging - 'else' - Create an SNS Topic (Environment values can be anything with no restrictions whatsoever)
#Stack2: Output Value of S3 Bucket name or SNS Topic ARN
#Stack1: Update the stack changing ImageId of the EC2 Instance (How to resolve?)

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-1853ac65
    us-west-1:
      AMI: ami-bf5540df
    eu-west-1:
      AMI: ami-3bfab942
    ap-southeast-1:
      AMI: ami-e2adf99e
    ap-southeast-2:
      AMI: ami-43874721

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
          Metadata: 
        AWS::CloudFormation::Init: 
          config: 
            files:
              :
    Properties:
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceTypeParameter
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - AMI
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo yum update -y
        sudo yum install httpd -y
        sudo /etc/init.d/httpd start
        echo \"<html><body><h1>Jon Exercise !!!</h1>\" > /var/www/html/index.html
        echo \"</body></html>\" >> /var/www/html/index.html
      Tags:
        - Key: key
          Value: value

Outputs:
  SSHCommand:
    Description: Exact SSH command to use
    Value: !Sub ssh -i "${KeyName}.pem" ec2-user@${MyInstance.PublicDnsName}
    Export:
      Name: SSHCommandName
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref MyInstance


